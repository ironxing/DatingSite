@using Microsoft.AspNet.Identity
@using DatingSite.Models
using System.Linq;
@model DatingSite.Models.ViewModels.FriendsFriendRequestsViewModel


@{
    ViewBag.Title = "FriendDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>FriendDetails</h2>

<div class="form">
    <label class="col-form-label" for="inputDefault">Create Category</label>
    <p><input type="text" class="form-control" placeholder="Default input" id="CategoryInput"></p>
</div>
<p><button type="button" class="btn btn-primary" id="AddCategory">Add category</button></p>


<div class="form-group">

    @*List Categories*@
    <div class="card border-secondary mb-3" style="max-width: 20rem;">

        <div class="card-body">
            <a>
                <ul id='CategoryList' style="list-style-type:none">

                    @*ApiController AJAX Result come here*@
                </ul>
            </a>
        </div>
    </div>

</div>

<div class="col-lg-5">
    <table class="table table-hover">
        <tbody>

            <tr class="table-primary">
                <th scope="row">Friends</th>
            </tr>
            @foreach (var item in @Model.Friends)
            {
                <tr class="table-success">
                    @if (item.ProfileOwner.Id != User.Identity.GetUserId())
                    {
                        <td>
                            @item.ProfileOwner.FirstName @item.ProfileOwner.LastName
                        </td>
                        <td>
                            <div class="col-md-10">
                                @Html.DropDownList("ddl",Model.FriendCategories.Select(f => new SelectListItem
                                    {
                                       Value = f.CategoryName.ToString(),
                                       Text = f.CategoryName.ToString(),
                                       Selected = "select" == f.CategoryName.ToString()
                                    }))
                            </div>
                        </td>
                    }

                    @if (item.ProfileVisitor.Id != User.Identity.GetUserId())
                    {
                        <td>
                            @item.ProfileVisitor.FirstName @item.ProfileVisitor.LastName
                        </td>
                        <td>
                            <div class="col-md-10">
                                @Html.DropDownList("ddl",Model.FriendCategories.Select(f => new SelectListItem
                                    {
                                       Value = f.CategoryName.ToString(),
                                       Text = f.CategoryName.ToString(),
                                       Selected = "select" == f.CategoryName.ToString()
                                    }))

                                @*@Html.DropDownList("Category",
                                         new SelectList(Model.FriendCategories, "CategoryName"),
                                         "Select Category",
                                         new { @class = "form-control" })*@
                            </div>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="col-lg-5">
    <table class="table table-hover">
        <tbody>
            <tr class="table-primary">
                <th scope="row">Friend Requests</th>
            </tr>

            @foreach (var item in @Model.FriendRequests)
            {
                <input type="hidden" class="FriendRequestId" value="@item.Id" />

                <tr class="table-warning">
                    <td>
                        @item.ProfileVisitor.FirstName
                        <span class="Accept-Friend-Request badge badge-success">ACCEPT</span>
                        <span class="Decline-Friend-Request badge badge-danger">DECLINE</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section scripts {
    <script>
        $(document).ready(function (ev) {
            $.ajax({
                url: '/api/Category/Category/ShowList',
                dataType: 'json',
                success: function (data) {
                    data.forEach((data) => {
                        var CategoryName = ('<li>' + data.CategoryName + '</li>');
                        $('#CategoryList').append(CategoryName);
                    });
                }
            });

            $('.Accept-Friend-Request').click(function (ev) {
                var friendRequestId = $('.FriendRequestId').val();
                ev.preventDefault();

                $.get('/API/Friends/FriendRequest/Accept?FriendModelId='
                    + friendRequestId,
                    function () {
                        window.location.reload();
                    }
                );
            });

            $('.Decline-Friend-Request').click(function (ev) {
                var friendRequestId = $('.FriendRequestId').val();
                ev.preventDefault();

                $.get('/API/Friends/FriendRequest/Decline?FriendModelId='
                    + friendRequestId,
                    function () {
                        window.location.reload();
                    }
                );
            });
            $('#AddCategory').click(function (ev) {
                ev.preventDefault();

                var categoryName = $('#CategoryInput').val();
                $('#CategoryInput').val("");
                console.log(categoryName);
                $.get('/api/Category/Category/Add?categoryName='
                    + categoryName,
                    function () {
                        window.location.reload();
                    });
            });
        });
    </script>
}