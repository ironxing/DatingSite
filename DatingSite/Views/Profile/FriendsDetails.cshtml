@using Microsoft.AspNet.Identity
@using DatingSite.Models
@using System.Linq;

@model DatingSite.Models.ViewModels.FriendsFriendRequestsViewModel


@{
    ViewBag.Title = "FriendDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-3">
        <div class="card-body">
            <p> <input type="text" class="form-cont</div>rol" placeholder="New friend category" id="CategoryInput"></p>
            <p> <button type="button" class="btn btn-primary" id="AddCategory">Add</button></p>
        </div>
    </div>

    <div class="col-md-8">

        <div class="col-md-8">
            <div class="card-body">
                <table class="table table-hover">
                    <tbody>
                        <tr class="table-primary">
                            <th colspan="3" scope="row">Friends</th>
                        </tr>

                        @foreach (var item in @Model.Friends)
                        {
                        

                        <tr class="table-success">
                            @*if current user was the Friend request sender*@

                            @if (item.ProfileVisitor.Id == User.Identity.GetUserId())
                            {
                                <td>
                                    @item.ProfileOwner.FirstName @item.ProfileOwner.LastName
                                </td>

                                <td>
                                    @if (Model.FriendCategories != null)
                                    {
                                        if (Model.FriendCategories.Any())
                                        {
                                            using (Html.BeginForm("AssignFriendCategory", "Profile", null, FormMethod.Post, htmlAttributes: new { @class = "form-inline my-2 my-lg-0" }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="FriendModelId" value=@item.Id />

                                                <div class="form-group">
                                                    @Html.DropDownList("ddlFriendCategoryName", Model.FriendCategories.Select(f => new SelectListItem
                                                       {
                                                           Value = f.CategoryName.ToString(),
                                                           Text = f.CategoryName.ToString(),
                                                           Selected = "select" == f.CategoryName.ToString()
                                                       }))
                                                </div>

                                                <div class="form-group">
                                                    <input type="hidden" name="FriendRequestSide" value="ProfileVisitor" />
                                                    <button id="AssignCategory" class="btn btn-secondary btn-sm" type="submit">Assign category</button>
                                                </div>
                                            }
                                        }
                                    }
                                </td>
                            }

                            @*if current user was the Friend request receiver*@
                            @if (@item.ProfileOwner.Id == User.Identity.GetUserId())
                            {
                                <td>
                                    @item.ProfileVisitor.FirstName @item.ProfileVisitor.LastName
                                </td>
                                <td>
                                    @if (Model.FriendCategories != null)
                                    {
                                        if (Model.FriendCategories.Any())
                                        {
                                            using (Html.BeginForm("AssignFriendCategory", "Profile", null, FormMethod.Post, htmlAttributes: new { @class = "form-inline my-2 my-lg-0" }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="FriendModelId" value=@item.Id />

                                                <div class="form-group">
                                                    @Html.DropDownList("ddlFriendCategoryName", Model.FriendCategories.Select(f => new SelectListItem
                                                       {
                                                           Value = f.CategoryName.ToString(),
                                                           Text = f.CategoryName.ToString(),
                                                           Selected = "select" == f.CategoryName.ToString()
                                                       }))
                                                </div>

                                                <div class="form-group">
                                                    <input type="hidden" name="FriendRequestSide" value="ProfileOwner" />
                                                    <button id="AssignCategory" class="btn btn-secondary btn-sm" type="submit">Assign category</button>
                                                </div>
                                            }
                                        }
                                    }
                                </td>
                            }
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="col-md-8">
            <div class="card-body">
                <table class="table table-hover">
                    <tbody>
                        <tr class="table-primary">
                            <th scope="row">Friend Requests</th>
                        </tr>

                        @foreach (var item in @Model.FriendRequests)
                        {
                            <input type="hidden" class="FriendRequestId" value="@item.Id" />
                            <tr class="table-warning">
                                <td>
                                    @item.ProfileVisitor.FirstName
                                    <span class="Accept-Friend-Request badge badge-success">ACCEPT</span>
                                    <span class="Decline-Friend-Request badge badge-danger">DECLINE</span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function (ev) {
            $.ajax({
                url: '/api/Category/Category/ShowList',
                dataType: 'json',
                success: function (data) {
                    data.forEach((data) => {
                        var CategoryName = ('<li>' + data.CategoryName + '</li>');
                        $('#CategoryList').append(CategoryName);
                    });
                }
            });

            $('.Accept-Friend-Request').click(function (ev) {
                var friendRequestId = $('.FriendRequestId').val();
                ev.preventDefault();

                $.get('/API/Friends/FriendRequest/Accept?FriendModelId='
                    + friendRequestId,
                    function () {
                        window.location.reload();
                    }
                );
            });

            $('.Decline-Friend-Request').click(function (ev) {
                var friendRequestId = $('.FriendRequestId').val();
                ev.preventDefault();

                $.get('/API/Friends/FriendRequest/Decline?FriendModelId='
                    + friendRequestId,
                    function () {
                        window.location.reload();
                    }
                );
            });

            $('#AddCategory').click(function (ev) {
                ev.preventDefault();

                var categoryName = $('#CategoryInput').val();
                $('#CategoryInput').val("");
                console.log(categoryName);
                $.get('/api/Category/Category/Add?categoryName='
                    + categoryName,
                    function () {
                        window.location.reload();
                    });
            });
        });
    </script>
}
