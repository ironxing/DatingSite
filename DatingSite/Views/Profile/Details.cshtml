@using Microsoft.AspNet.Identity
@model DatingSite.Models.ViewModels.ProfileDetailViewModel


@{
    ViewBag.Title = "Details";
}


<div class="row">
    <div class="col-lg-4">
        @*Do we match button, shown for visitors only*@
        @if (Model.User.Id != User.Identity.GetUserId())
        {
            <button id="DoWeMatch" type="button" class="btn btn-outline-warning">Do we match?</button>
        }

        @*My Matches, shown for visitors only*@
        @if (Model.User.Id == User.Identity.GetUserId())
        {
            @Html.ActionLink("My Matches", "MyMatches", new { id = Model.User.Id } , new{ @class="btn btn-outline-warning"})
        }

        @*Profile*@
        <dl class="dl-horizontal">
            <div class="card-body">
                <dt>
                    <img src="~/Images/@Html.DisplayFor(model =>model.User.ImagePath)" style="height:200px;width:200px;" />
                </dt>
                <dt>
                    @Html.DisplayNameFor(model => model.User.FirstName)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.User.FirstName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.User.LastName)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.User.LastName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.User.Email)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.User.Email)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.User.BirthDate)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.User.BirthDate)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.User.Gender)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.User.Gender)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.User.Description)
                </dt>
                <p>
                    @Html.DisplayFor(model => model.User.Description)
                </p>
            </div>
        </dl>
        <p>
            @Html.ActionLink("Back to Home", "Index", "Home")
        </p>

        @*Add friend, shown for visitors only*@
        @if (Model.User.Id != User.Identity.GetUserId())
        {
            <div class="friends">
                @if (Model.FriendStatus && !Model.Friends)
                {
                    <div id="PFR" class="arefriendsdiv alert alert-warning">
                        <p>Pending friend request.</p>
                    </div>
                }
                else if (!Model.FriendStatus && !Model.Friends)
                {
                        <button type="button" class="btn btn-primary" id="AddFriend">Add Friend</button>
                }
                else if (Model.Friends && Model.FriendStatus)
                {
                    <div id="FF" class="arefriendsdiv alert alert-success">
                        <span class="glyphicon glyphicon-thumbs-up"></span> friends
                    </div>
                }
            </div>
        }

        @*links and buttons that are shown for profile owner only*@
        @if (Model.User.Id == User.Identity.GetUserId())
        {
            //Edit
            <p>
                @Html.ActionLink("Edit", "Edit", new { id = Model.User.Id })
            </p>

            //Export
            <p>
                @using (Html.BeginForm("ExportUserData", "Profile", null, FormMethod.Post))
                {
                    <input type="submit" value="Export user data" class="btn btn-secondary" />
                }
            </p>

            //Toggle active status
            <p>
                @if (Model.User.IsActive)
                {
                    <input type="submit" value="Deactive Profile" class="btn btn-danger" />
                }
                else if (!Model.User.IsActive)
                {
                    <input type="submit" value="Reactive Profile" class="btn btn-danger" />
                }
            </p>


            //Latest visitors
            <div class="card border-secondary mb-3" style="max-width: 20rem;">
                <div class="card-header">Latest five visitors</div>
                <div class="card-body">
                        <ul id='VisitorList' style="list-style-type:none">
                            @*ApiController AJAX Result come here*@
                        </ul>
                </div>
            </div>
        }
    </div>

    @*message*@
    <div class="col-lg-6 offset-lg-1">
        <div class="modal-dialog col-lg-6" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Message</h5>
                </div>
                <div class="modal-body">
                    <textarea rows="3" cols="70" id="new-message"></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" id="SendMessage" class="btn btn-primary">Post Message</button>
                </div>
            </div>
        </div>

        <div id="confirmBox">
            <div class="message"></div>
            <button class="yes">Yes</button>
            <button class="no">No</button>
        </div>

        @if (Model.MessageItems.Any())
        {
            <ul>
                @foreach (var item in Model.MessageItems)
                {
                    if (item.MessageSender.IsActive)
                    {
                        <li href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                            <div class="d-flex w-100 justify-content-between">
                                <h5 class="mb-1">From @String.Concat(item.MessageSender.FirstName, " ", item.MessageSender.LastName)</h5>

                            </div>
                            <p class="mb-1">@item.Text</p>
                            <small class="text-muted">Sent: @item.messageTime</small>
                            @if (Model.User.Id == User.Identity.GetUserId())
                            {
                                <button class="delete-msg btn btn-outline-secondary btn-sm" onclick='DoConfirmDeleteMsg("Are you sure you want to delete the message?", function yes()
                                             {
                                                DeleteMsg(@item.id)
                                            }, function no()
                                            {

                                            });'>
                                    Delete
                                </button>
                            }
                        </li>
                    }
                }
            </ul>
        }

    </div>

    <input type="hidden" id="ProfileUserId" value="@Model.User.Id" />
    <input type="hidden" id="VisitorUserId" value="@User.Identity.GetUserId()" />
</div>
  

@section scripts {
    <script>
        $(document).ready(function (ev) {
            var ProfileUserId = $('#ProfileUserId').val();
            var VisitorUserId = $('#VisitorUserId').val();

            $.get('/API/ProfileVisits/VISIT/Add?profileUserId='
                + ProfileUserId + '&visitorUserId=' + VisitorUserId)

            //Load latest 5 visitors using AJAX
            $.ajax({
                url: '/API/ProfileVisits/VISIT/GetVisitors',
                dataType: 'json',
                success: function (data) {
                    data.forEach((data) => {
                        var visitorFullName = ('<li><a href=/Profile/Details/' + data.VisitorId + '>' + data.VisitorFullName + '</a></li>');
                        $('#VisitorList').append(visitorFullName);
                    });
                }
            });


            $('#SendMessage').click(function (ev) {
                ev.preventDefault();

                var Message = $('#new-message').val();
                var SenderId = $('#VisitorUserId').val();
                var RecieverId = $('#ProfileUserId').val();

                $('#new-message').val("");

                $.get('/API/Message/Message/Add?message='
                    + Message + '&senderId=' + SenderId + '&recieverId=' + RecieverId,
                    function () {
                        window.location.reload();
                });
            });

            $('#AddFriend').click(function (ev) {
                ev.preventDefault();

                var profileOwnerId = $('#ProfileUserId').val();

                $.get('/API/Friends/Friend/ADD?Id=' + profileOwnerId,
                    function () {
                        window.location.reload();
                    });
            });

            $('.toggle-user-active-status').click(function (ev) {
                ev.preventDefault();

                $.get('/API/Profile/ToggerActiveStatus',
                    function () {
                        window.location.reload();
                    });
            });

            $('#DoWeMatch').click(function (ev) {
                ev.preventDefault();
                //on click returns Profile owner full name and match result
                $.ajax({
                    url: '/API/Profile/DoWeMatch?ProfileOwnerId=' + ProfileUserId,
                    dataType: 'json',
                    success: function (data) {
                        var ProfileOwnerFullName = data.ProfileOwnerFullName;
                        var Match = data.Match;

                        if (Match) {
                            alert("Yes! You and " + ProfileOwnerFullName + "match with each other!")
                        }
                        else {
                            alert("No, you and " + ProfileOwnerFullName + " do not match each other.")
                        }
                    }
                });
            });
        });

        //functions for custom confirm box
        function DoConfirmDeleteMsg(msg, yesFn, noFn) {
            var confirmBox = $("#confirmBox");
            confirmBox.find(".message").text(msg);
            confirmBox.find(".yes,.no").unbind().click(function () {
                confirmBox.hide();
            });
            confirmBox.find(".yes").click(yesFn);
            confirmBox.find(".no").click(noFn);
            confirmBox.show();
        }

        function DeleteMsg(messageId) {
            $.ajax({
                url: '/api/Message/Message/Delete?MessageId=' + messageId,
                type: 'DELETE'
            });

            location.reload();
        }
    </script>
}
